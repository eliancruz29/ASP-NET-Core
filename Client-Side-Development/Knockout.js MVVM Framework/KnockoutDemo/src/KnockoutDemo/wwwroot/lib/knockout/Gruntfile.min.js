module.exports=function(n){function u(t){var i;return global.knockoutDebugCallback=function(n){i=n},eval(n.file.read(t)),i}function i(){var t=n.config("fragments"),i=[t+"extern-pre.js",t+"amd-pre.js",u(t+"source-references.js"),t+"amd-post.js",t+"extern-post.js"],r=Array.prototype.concat.apply([],i),f=r.map(function(t){return n.file.read("./"+t)}).join("");return f.replace("##VERSION##",n.config("pkg.version"))}function f(t){var r=[];r.push(n.config("banner"));r.push("(function(){\n");r.push("var DEBUG=true;\n");r.push(i());r.push("})();\n");n.file.write(t,r.join("").replace(/\r\n/g,"\n"))}function e(t,r){var u=require("closure-compiler");n.log.write("Compiling...");u.compile("/**@const*/var DEBUG=false;"+i(),{compilation_level:"ADVANCED_OPTIMIZATIONS",output_wrapper:"(function() {%output%})();"},function(i,u){i?(n.log.error(i),r(!1)):(n.log.ok(),n.file.write(t,(n.config("banner")+u).replace(/\r\n/g,"\n")),r(!0))})}var r=n.util._,t;n.initConfig({pkg:n.file.readJSON("package.json"),fragments:"./build/fragments/",banner:"/*!\n"+" * Knockout JavaScript library v<%= pkg.version %>\n"+" * (c) The Knockout.js team - <%= pkg.homepage %>\n"+" * License: <%= pkg.licenses[0].type %> (<%= pkg.licenses[0].url %>)\n"+" */\n\n",checktrailingspaces:{main:{src:["**/*.{js,html,css,bat,ps1,sh}","!build/output/**","!node_modules/**"],filter:"isFile"}},build:{debug:"./build/output/knockout-latest.debug.js",min:"./build/output/knockout-latest.js"},dist:{debug:"./dist/knockout.debug.js",min:"./dist/knockout.js"},test:{phantomjs:"spec/runner.phantom.js",node:"spec/runner.node.js"}});n.registerTask("clean","Clean up output files.",function(t){var i=n.config("build"),u=[i.debug,i.min],f={force:t=="force"};return r.forEach(u,function(t){n.file.exists(t)&&n.file.delete(t,f)}),!this.errorCount});t=/[ ]$/;n.registerMultiTask("checktrailingspaces","checktrailingspaces",function(){var i=[];return this.files[0].src.forEach(function(r){var u=n.file.read(r),f=u.split(/\r*\n/);f.forEach(function(n,u){t.test(n)&&i.push([r,u+1,n].join(":"))})}),i.length?(n.log.error("The following files have trailing spaces that need to be cleaned up:"),n.log.writeln(i.join("\n")),!1):void 0});n.registerMultiTask("build","Build",function(){if(!this.errorCount){var n=this.data;this.target==="debug"?f(n):this.target==="min"&&e(n,this.async())}return!this.errorCount});n.registerMultiTask("test","Run tests",function(){var t=this.async();n.util.spawn({cmd:this.target,args:[this.data]},function(i,r,u){u===127?(n.verbose.error(r.stderr),t(!0)):(n.log.writeln(r.stdout),i&&n.log.error(r.stderr),t(!i))})});n.registerTask("dist",function(){var i=n.config("pkg.version"),r=n.config("build"),t=n.config("dist");n.file.copy(r.debug,t.debug);n.file.copy(r.min,t.min);console.log("To publish, run:");console.log("    git add bower.json");console.log("    git add -f "+t.debug);console.log("    git add -f "+t.min);console.log("    git checkout head");console.log("    git commit -m 'Version "+i+" for distribution'");console.log("    git tag -a v"+i+" -m 'Add tag v"+i+"'");console.log("    git checkout master");console.log("    git push origin --tags")});n.registerTask("default",["clean","checktrailingspaces","build","test"])};